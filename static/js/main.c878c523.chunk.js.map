{"version":3,"sources":["GlobalStats.js","ModalCard.js","Chart.js","MainModal.js","CountryStats.js","MainTable.js","App.js","index.js"],"names":["GlobalStats","global","separator","style","display","flexDirection","justifyContent","alignItems","margin","className","color","TotalConfirmed","TotalDeaths","ModalCard","TotalRecovered","outcome","Card","Header","Body","toFixed","Chart","CountryName","useState","data","setData","confirmedCases","setConfirmedCases","deathsTotal","setDeathsTotal","useEffect","a","fetch","then","response","json","console","log","caseDate","active","confirmed","deaths","caseDatesSubstracted","dataObj","push","Date","Active","Confirmed","Deaths","i","length","substring","labels","datasets","label","backgroundColor","borderColor","borderWidth","pointBackgroundColor","pointBorderColor","pointBorderWidth","loadData","fontSize","MainModal","NewConfirmed","NewDeaths","show","setShow","variant","onClick","Modal","animation","onHide","size","aria-labelledby","centered","closeButton","Title","CountryStats","country","mappedCountries","map","item","Country","Fragment","MainTable","sortConfig","setSortConfig","sort","b","key","direction","requestSort","Table","striped","bordered","hover","cursor","scope","App","setGlobal","setCountry","num","num_parts","toString","split","replace","join","Global","Countries","padding","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c878c523.chunk.js","sourcesContent":["import React from 'react';\nimport './global.css'\n\n\nconst GlobalStats = ({global, separator}) => {\n    return(\n        <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', margin: '25px'}}>\n            <div className=\"header\">\n            <h1>Coronavirus cases: </h1>\n            <p style={{color: '#AAAAAA'}}>{global.TotalConfirmed > 0 ? separator(global.TotalConfirmed) : null}</p>\n                </div>\n            <div className=\"header\">\n            <h1>Deaths: </h1>\n            <p style={{color: '#b2332c'}}>{global.TotalDeaths > 0 ? separator(global.TotalDeaths) : null}</p>\n                </div>\n\n        </div>\n    )\n}\n\n\nexport default GlobalStats","import React from 'react';\nimport {Card} from 'react-bootstrap';\n\nconst ModalCard = ({TotalRecovered, TotalDeaths, separator}) => {\n\nconst outcome = TotalRecovered + TotalDeaths\n    return(\n            <Card>\n                  <Card.Header>Closed Cases</Card.Header>\n            <Card.Body>\n                <div>\n                    <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center'}}><h1>{separator(outcome)}</h1><p>Cases which had an outcome</p></div>\n                    <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-around'}}>\n                    <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center'}}><h3 style={{color: '#8ACA2B'}}>{separator(TotalRecovered)} ({(TotalRecovered / outcome * 100).toFixed(2)}%) </h3><p>Recovered/Discharged</p></div>\n                    <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center'}}><h3>{separator(TotalDeaths)} ({(TotalDeaths / outcome * 100).toFixed(2)}%) </h3><p>Deaths</p></div>\n                    </div>\n                </div>\n            </Card.Body>\n            </Card>\n    )\n}\n\nexport default ModalCard\n\n","import React, {useEffect, useState} from 'react';\nimport {Line} from 'react-chartjs-2';\n\n\nconst Chart = ({CountryName}) => {\n    const[data, setData] = useState({});\n    const[confirmedCases, setConfirmedCases] = useState({});\n    const[deathsTotal, setDeathsTotal] = useState({});\n\n    \n    useEffect(() => {\n        const loadData = async() => {\n          await fetch(`https://api.covid19api.com/total/dayone/country/${CountryName}`)\n          .then(response => response.json())\n          .then(data => {\n              console.log(data)\n            let caseDate = [];\n            let active = [];\n            let confirmed = [];\n            let deaths = [];\n            let caseDatesSubstracted = [];\n\n            for(const dataObj of data) {\n                caseDate.push(dataObj.Date);\n                active.push(dataObj.Active);\n                confirmed.push(dataObj.Confirmed)\n                deaths.push(dataObj.Deaths)\n            }\n            for(let i = 0; i < caseDate.length; i++){\n                caseDatesSubstracted.push(caseDate[i].substring(0, caseDate[i].length-10));\n            }\n            setData({\n                labels: caseDatesSubstracted,\n                datasets: [\n                    {\n                        label: 'Active Cases',\n                        data: active,\n                        backgroundColor: [\n                            'rgba(47, 152, 208, 0.2)',\n                        ],\n                        borderColor: [\n                            'rgba(19, 247, 228,1)',\n                        ],\n                        borderWidth: 2,\n                        pointBackgroundColor: 'rgba(19, 247, 228,1)',\n                        pointBorderColor: 'rgba(19, 247, 228,1)',\n                        pointBorderWidth: 2,\n                    }\n                ]\n            })\n            setDeathsTotal({\n                labels: caseDatesSubstracted,\n                datasets: [\n                    {\n                        label: 'Deaths',\n                        data: deaths,\n                        backgroundColor: [\n                            'rgba(47, 152, 208, 0.2)',\n                        ],\n                        borderColor: [\n                            'rgba(19, 247, 228,1)',\n                        ],\n                        borderWidth: 2,\n                        pointBackgroundColor: 'rgba(19, 247, 228,1)',\n                        pointBorderColor: 'rgba(19, 247, 228,1)',\n                        pointBorderWidth: 2,\n                    }\n                ]\n            })\n            setConfirmedCases({\n                labels: caseDatesSubstracted,\n                datasets: [\n                    {\n                        label: 'Confirmed Cases',\n                        data: confirmed,\n                        backgroundColor: [\n                            'rgba(47, 152, 208, 0.2)',\n                        ],\n                        borderColor: [\n                            'rgba(19, 247, 228,1)',\n                        ],\n                        borderWidth: 2,\n                        pointBackgroundColor: 'rgba(19, 247, 228,1)',\n                        pointBorderColor: 'rgba(19, 247, 228,1)',\n                        pointBorderWidth: 2,\n                    }\n                ]\n            })\n          })\n          }\n          loadData();\n    }, []);\n\n\n\n\n\n    return(\n        <div className=\"chart\">\n                <h1 style={{margin: '50px 0', fontSize: '25px'}}> Confirmed Coronavirus Cases in {CountryName}</h1>\n                <Line\n                data={confirmedCases}\n                />\n                <h1 style={{margin: '50px 0', fontSize: '25px'}}>Active Coronavirus Cases in {CountryName}</h1>\n                <Line\n                data={data}\n                />\n                <h1 style={{margin: '50px 0', fontSize: '25px'}}>Total Coronavirus Deaths in {CountryName}</h1>\n                <Line\n                data={deathsTotal}\n                />\n        </div>\n    )\n}\n\n\nexport default Chart;","import React, {useState} from 'react';\nimport {Modal} from 'react-bootstrap';\nimport ModalCard from './ModalCard'\nimport Chart from './Chart'\nimport './global.css';\n\nconst MainModal = ({ CountryName, TotalConfirmed, NewConfirmed, NewDeaths, TotalDeaths, TotalRecovered, separator}) => {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <a variant=\"primary\" onClick={handleShow}>\n        {CountryName}\n      </a>\n\n      <Modal animation={false} show={show} onHide={handleClose}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered>\n        <Modal.Header closeButton>\n          <Modal.Title><div style={{display: 'flex', flexDirection: 'row'}}><span>{CountryName}</span><img></img></div></Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div>\n          <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', margin: '25px'}}>\n          <div className=\"header\">\n            <h1>Coronavirus cases: </h1>\n            <p style={{color: '#AAAAAA'}}>{TotalConfirmed > 0 ? separator(TotalConfirmed) : null}</p>\n                </div>\n            <div className=\"header\">\n            <h1>Deaths: </h1>\n            <p style={{color: '#b2332c'}}>{TotalDeaths > 0 ? separator(TotalDeaths) : null}</p>\n                </div>\n            <div className=\"header\">\n            <h1>Recovered: </h1>\n            <p style={{color: '#8ACA2B'}}>{TotalRecovered > 0 ? separator(TotalRecovered) : null}</p>\n                </div>\n          </div>\n          </div>\n          <ModalCard TotalRecovered={TotalRecovered} TotalDeaths={TotalDeaths} separator={separator}></ModalCard>\n          <Chart CountryName={CountryName}/>\n          </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n\nexport default MainModal","import React from 'react';\nimport MainModal from './MainModal'\nimport './country.css'\n\nconst CountryStats = ({country, separator}) => {\n\n    const mappedCountries = country.map(item => {\n        if(item.TotalConfirmed || item.NewConfirmed || item.NewDeaths || item.TotalDeaths || item.TotalRecovered !== 0) {\n            return <tr>\n            <td><MainModal CountryName={item.Country} TotalConfirmed={item.TotalConfirmed} NewConfirmed={item.NewConfirmed} NewDeaths={item.NewDeaths} TotalDeaths={item.TotalDeaths} TotalRecovered={item.TotalRecovered} separator={separator}/></td>\n            <td>{separator(item.TotalConfirmed)}</td>\n            <td>{separator(item.NewConfirmed)}</td>\n            <td style={item.NewDeaths > 0 ? {backgroundColor: 'red', color: 'white'} : null} >{`${item.NewDeaths > 0 ? '+' + item.NewDeaths : item.NewDeaths }`}</td>\n            <td>{separator(item.TotalDeaths)}</td>\n            <td>{separator(item.TotalRecovered)}</td> \n            </tr>\n        }\n      })\n\n\n    return(\n        <React.Fragment>\n    {mappedCountries}\n        </React.Fragment>\n\n    )\n}\n\nexport default CountryStats","import React, {useState, useEffect} from 'react';\nimport CountryStats from './CountryStats';\nimport Table from 'react-bootstrap/Table';\n\nconst MainTable = ({country, separator}) => {\n\n  console.log(country)\n\n    const[sortConfig, setSortConfig] = useState(null);\n    let countryData = country;\n\n      if(sortConfig !== null) {\n        countryData.sort((a, b) => {\n          if (a[sortConfig.key] < b[sortConfig.key]) {\n            return sortConfig.direction === 'ascending' ? 1 : -1;\n          }\n          if (a[sortConfig.key] > b[sortConfig.key]) {\n            return sortConfig.direction === 'ascending' ? -1 : 1;\n          } \n          return 0;\n        });\n      }\n      \n      const requestSort = key => {\n        let direction = 'ascending';\n        if (sortConfig && sortConfig.key === key && sortConfig.direction === 'ascending'){\n          direction = 'descending';\n        }\n        setSortConfig({ key, direction });\n      };\n    \n\n      useEffect(() => {\n        requestSort('TotalConfirmed');\n      }, [])\n      \n\n    return(\n        <React.Fragment>\n            \n            <Table striped bordered hover variant=\"light\">\n        <thead>\n        <tr style={{cursor: \"pointer\"}} className=\"thead-dark\" >\n          <th onClick={() => requestSort('Country')} scope=\"col\">Country </th>\n          <th onClick={() => requestSort('TotalConfirmed')} scope=\"col\">Total Cases </th>\n          <th onClick={() => requestSort('NewConfirmed')} scope=\"col\">New Cases </th>\n          <th onClick={() => requestSort('NewDeaths')} scope=\"col\">New Deaths </th>\n          <th onClick={() => requestSort('TotalDeaths')} scope=\"col\">Total Deaths  </th>\n          <th onClick={() => requestSort('TotalRecovered')} scope=\"col\">Total Recovered  </th>\n        </tr>\n        </thead>\n          <tbody>\n          <CountryStats country={country} separator={separator}/>\n          </tbody>\n          </Table>\n          </React.Fragment>\n    )\n}\n\nexport default MainTable\n\n\n\n// const Table = () => {\n//   const[country, setCountry] = useState([]);\n//   const[toggle, setToggle] = useState(false);\n\n//   const sortColumnNumber = (sort, columnName, data) => {\n//     data = data.sort((a, b) => {\n//       let [first, second] = sort ? [a, b] : [b, a];\n//       console.log(first,)\n      \n  \n//       if (first[columnName] > second[columnName]) return -1;\n//       if (first[columnName] < second[columnName]) return 1;\n//       return 0;\n//     });\n//   };\n\n  // useEffect(() => {\n  //     const loadData = async() => {\n  //       await fetch('https://api.covid19api.com/summary')\n  //       .then(response => response.json())\n  //       .then(data => {\n  //       const stats = data.Countries;\n  //       sortColumnNumber(true, 'TotalConfirmed', stats)\n  //       setCountry(stats);\n  //       })\n  //       }\n  //       loadData();\n  // }, []);\n\n//   useEffect(() =>{\n//     console.log(toggle, 'usefect')\n//   }, [toggle])\n  \n//   return(\n//       <React.Fragment>\n//           <table className=\"table table-bordered table-stripped\">\n//       <thead>\n//       <tr onClick={(e) =>{\n//           setToggle(!toggle);\n//           sortColumnNumber(toggle, e.target.className, country);\n//       }}style={{cursor: \"pointer\"}} className=\"thead-dark\" >\n//         <th className=\"Country\" scope=\"col\">Country </th>\n//         <th className=\"TotalConfirmed\" scope=\"col\">Total Cases </th>\n//         <th className=\"NewConfirmed\" scope=\"col\">New Cases </th>\n//         <th className=\"NewDeaths\" scope=\"col\">New Deaths </th>\n//         <th className=\"TotalDeaths\" scope=\"col\">Total Deaths  </th>\n//         <th className=\"TotalRecovered\" scope=\"col\">Total Recovered  </th>\n//       </tr>\n//       </thead>\n//         <tbody>\n//         <CountryStats country={country} />\n//         </tbody>\n//         </table>\n//         </React.Fragment>\n//   )\n// }","import React, {useState, useEffect} from 'react';\nimport GlobalStats from './GlobalStats';\nimport MainTable from './MainTable';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App = () => {\n\n  const[global, setGlobal] = useState({});\n  const[country, setCountry] = useState([]);\n\n  const separator = (num) => {\n    const num_parts = num.toString().split(\".\");\n    num_parts[0] = num_parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    return num_parts.join(\".\");\n    }\n\nuseEffect(() => {\n    const loadData = async() => {\n      await fetch('https://api.covid19api.com/summary')\n      .then(response => response.json())\n      .then(data => {\n      setGlobal(data.Global);\n      setCountry(data.Countries);\n      })\n      }\n      loadData();\n}, [])\n\n\n  return (\n<div style={{padding: \"0px 100px\"}}>\n<GlobalStats global={global} separator={separator}/>\n<MainTable country={country} separator={separator} />\n</div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}